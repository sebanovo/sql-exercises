CREATE DATABASE VENTAS2025SA;
USE VENTAS2025SA;

CREATE TABLE CATEGORIA
(
	ID INTEGER NOT NULL PRIMARY KEY,
    DESCRIPCION VARCHAR(20) NOT NULL
);

INSERT INTO CATEGORIA VALUES(1, 'COMIDA');
INSERT INTO CATEGORIA VALUES(2, 'BEBIDA');

CREATE TABLE PRODUCTO
(
	CODIGO VARCHAR(4) NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50) NOT NULL,
    PRECIO INTEGER NOT NULL,
    IDCAT INTEGER NOT NULL,
    FOREIGN KEY (IDCAT)
		REFERENCES CATEGORIA(ID)
		ON UPDATE CASCADE
		ON DELETE CASCADE
);

INSERT INTO PRODUCTO VALUES('P001', 'Hamburguesa Simple', 15, 1);
INSERT INTO PRODUCTO VALUES('P002', 'Hamburguesa Doble', 20, 1);
INSERT INTO PRODUCTO VALUES('P003', 'Coca Cola Personal', 10, 2);
INSERT INTO PRODUCTO VALUES('P004', 'Coca Cola Peque', 5, 2);
INSERT INTO PRODUCTO VALUES('P005', 'Lomito', 18, 1);

-- Mostrar los productos con un precio menor a 20bs y su nombre comience con H 
SELECT * FROM PRODUCTO
WHERE PRECIO <20 AND NOMBRE LIKE 'H%';

-- Mostrar todos los productos que su precio este entre 5 y 15bs
SELECT * FROM PRODUCTO
WHERE PRECIO >= 5 AND PRECIO <= 15;

SELECT * FROM PRODUCTO
WHERE PRECIO BETWEEN 5 AND 15;

-- Mostrar los productos que pertenecen a la categoria comida
-- Consulta sin anidar
SELECT CODIGO, NOMBRE, PRECIO
FROM PRODUCTO, CATEGORIA
WHERE ID=IDCAT AND DESCRIPCION = 'COMIDA';

-- Consulta anidada
SELECT CODIGO, NOMBRE, PRECIO
FROM PRODUCTO
WHERE IDCAT IN (
	SELECT ID FROM CATEGORIA
	WHERE DESCRIPCION = 'COMIDA'
);

-- Consulta inner join
SELECT CODIGO, NOMBRE, PRECIO
FROM PRODUCTO 
INNER JOIN CATEGORIA ON PRODUCTO.IDCAT = CATEGORIA.ID
WHERE CATEGORIA.DESCRIPCION = 'COMIDA';

CREATE TABLE FACTURA
(
	NROF INTEGER NOT NULL PRIMARY KEY,
    NROAUTORIZACION INTEGER NOT NULL,
    FECHA DATE NOT NULL,
    NIT INTEGER NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    MONTOTOTAL INTEGER NOT NULL
);

INSERT INTO FACTURA VALUES(100, 18181, '2025-01-10', 111, 'Joaquin Chumacero', 25);
INSERT INTO FACTURA VALUES(101, 18181, '2025-01-10', 222, 'Saturnino Mamani', 30);
INSERT INTO FACTURA VALUES(102, 18181, '2025-01-15', 333, 'joaquin Chumacero', 30);

UPDATE FACTURA
SET NIT=111
WHERE NROF = 102;

CREATE TABLE VENDE 
(
	NROFACTURA INTEGER NOT NULL,
    CODIGO VARCHAR(4) NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    PRECIO FLOAT NOT NULL,
    PRIMARY KEY (NROFACTURA, CODIGO), 
    
    FOREIGN KEY (NROFACTURA)
		REFERENCES FACTURA(NROF)
		ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (CODIGO)
		REFERENCES PRODUCTO(CODIGO)
		ON UPDATE CASCADE
        ON DELETE CASCADE
);

INSERT INTO VENDE VALUES(100, 'P001', 1, 15);
INSERT INTO VENDE VALUES(100, 'P003', 1, 15);
INSERT INTO VENDE VALUES(101, 'P002', 2, 20);
INSERT INTO VENDE VALUES(101, 'P001', 1, 10);
INSERT INTO VENDE VALUES(102, 'P002', 2, 15);

/* PASOS PARA EL CRITERIO DE BUSQUDA
-- 1) Identificar las tablas a usar
-- 2) Criterio de búsqueda de quien mostrar la salida
-- 3) ...pending
*/
-- Mostrar todos los productos comprados por Saturnino Mamani
SELECT FACTURA.NROF, FACTURA.NOMBRE, PRODUCTO.NOMBRE, VENDE.PRECIO, PRODUCTO.PRECIO
FROM FACTURA, VENDE, PRODUCTO
WHERE FACTURA.NROF = VENDE.NROFACTURA
AND PRODUCTO.CODIGO = VENDE.CODIGO 
AND FACTURA.NOMBRE = "Saturnino Mamani";

-- Otra forma usando joins
SELECT FACTURA.NROF, FACTURA.NOMBRE, PRODUCTO.NOMBRE, VENDE.PRECIO, PRODUCTO.PRECIO
FROM PRODUCTO 
INNER JOIN VENDE ON PRODUCTO.CODIGO = VENDE.CODIGO
INNER JOIN FACTURA ON VENDE.NROFACTURA = FACTURA.NROF
WHERE FACTURA.NOMBRE = 'Saturnino Mamani';

-- Ojo en este caso no podemos usar consultas anidas porque solo podemos mostrar columnas
-- de una sola tabla al usar anidacion y en el ejercicio se muestran columnas de hasta 2 tablas

-- Mostrar todos todas las categorias que compro Saturnino Mamani
-- sin anidar
SELECT FACTURA.NOMBRE, PRODUCTO.NOMBRE, CATEGORIA.DESCRIPCION
FROM FACTURA, VENDE, PRODUCTO, CATEGORIA
WHERE FACTURA.NROF = VENDE.NROFACTURA
AND VENDE.CODIGO = PRODUCTO.CODIGO
AND PRODUCTO.IDCAT = CATEGORIA.ID
AND FACTURA.NOMBRE = 'Saturnino Mamani';

-- usar inner join
SELECT FACTURA.NOMBRE, PRODUCTO.NOMBRE, CATEGORIA.DESCRIPCION
FROM CATEGORIA
INNER JOIN PRODUCTO ON PRODUCTO.IDCAT = CATEGORIA.ID
INNER JOIN VENDE ON VENDE.CODIGO = PRODUCTO.CODIGO
INNER JOIN FACTURA ON FACTURA.NROF = VENDE.NROFACTURA
WHERE FACTURA.NOMBRE = 'Saturnino Mamani';

-- Mostrar la factura de Saturnino Mamani
SELECT * FROM FACTURA
WHERE NOMBRE = 'Saturnino Mamani';

-- Mostrar las compras de Saturnino Mamani (VENDE)
SELECT * FROM VENDE 
WHERE NROFACTURA IN (
	SELECT NROF FROM FACTURA
    WHERE NOMBRE='Saturnino Mamani'
);
			
-- Mostrar todos los productos comprados por Saturnino Mamani (PRODUCTO)
SELECT * FROM PRODUCTO
WHERE CODIGO IN (
	SELECT CODIGO FROM VENDE 
    WHERE NROFACTURA IN (
		SELECT NROF FROM FACTURA
		WHERE NOMBRE='Saturnino Mamani'
	)
);

-- Mostrar las facturas donde se haya vendido el producto coca cola personal
SELECT * FROM FACTURA
WHERE NROF IN (
	SELECT NROFACTURA FROM VENDE
	WHERE CODIGO IN (
		SELECT CODIGO FROM PRODUCTO 
		WHERE Nombre = 'Coca Cola Personal'
	)
);
             
-- Otra forma sin anidar
SELECT FACTURA.NROF, FACTURA.FECHA, FACTURA.MONTOTOTAL
FROM FACTURA, VENDE, PRODUCTO
WHERE FACTURA.NROF = VENDE.NROFACTURA 
AND VENDE.CODIGO = PRODUCTO.CODIGO
AND	PRODUCTO.NOMBRE = 'Coca Cola Personal';

-- Mostrar el NIT y el NOMBRE de las personas que han comprado productos de la CATEGORIA BEBIDAS
SELECT FACTURA.NIT, FACTURA.NOMBRE
FROM FACTURA, VENDE, PRODUCTO, CATEGORIA
WHERE FACTURA.NROF = VENDE.NROFACTURA
AND VENDE.CODIGO = PRODUCTO.CODIGO
AND PRODUCTO.IDCAT = CATEGORIA.ID 
AND CATEGORIA.DESCRIPCION = 'BEBIDA';

-- Otra forma usando inner join
SELECT FACTURA.NIT, FACTURA.NOMBRE
FROM FACTURA
INNER JOIN VENDE ON FACTURA.NROF = VENDE.NROFACTURA
INNER JOIN PRODUCTO ON VENDE.CODIGO = PRODUCTO.CODIGO
INNER JOIN CATEGORIA ON PRODUCTO.IDCAT = CATEGORIA.ID
WHERE CATEGORIA.DESCRIPCION = 'BEBIDA';

-- Otra forma usando consultas anidadas
SELECT FACTURA.NIT, FACTURA.NOMBRE
FROM FACTURA
WHERE NROF IN (
	SELECT NROFACTURA FROM VENDE
    WHERE CODIGO IN (
		SELECT CODIGO FROM PRODUCTO
        WHERE IDCAT IN (
			SELECT ID FROM CATEGORIA
            WHERE CATEGORIA.DESCRIPCION = 'BEBIDA'
		)
	)
);

-- Mostrar la cantidad de facturas
SELECT COUNT(*) FROM FACTURA;

-- Mostrar el costo total ingresado que es 100
SELECT SUM(MONTOTOTAL) FROM FACTURA;

-- Cual es el monto más bajo vendido
SELECT MIN(MONTOTOTAL) FROM FACTURA;

-- Cual es el monto promedio
SELECT AVG(MONTOTOTAL) FROM FACTURA;

-- Mostrar la cantidad de productos de la categoria BEBIDA
SELECT COUNT(*)
FROM PRODUCTO, CATEGORIA
WHERE PRODUCTO.IDCAT = CATEGORIA.ID
AND CATEGORIA.DESCRIPCION = "BEBIDA";

-- Mostrar el promedio de los productos de la categoria COMIDA
SELECT AVG(PRECIO)
FROM PRODUCTO, CATEGORIA
WHERE PRODUCTO.IDCAT = CATEGORIA.ID
AND CATEGORIA.DESCRIPCION = "COMIDA";

-- Mostrar cuantas veces se han vendido el producto Hamburguesa Doble
SELECT COUNT(*) 
FROM VENDE, PRODUCTO
WHERE VENDE.CODIGO = PRODUCTO.CODIGO
AND PRODUCTO.NOMBRE = 'Hamburguesa Doble';

-- Mosrar cuantas Hamburguesas Dobles se han vendido en total
SELECT SUM(VENDE.CANTIDAD) 
FROM VENDE, PRODUCTO
WHERE VENDE.CODIGO = PRODUCTO.CODIGO
AND PRODUCTO.NOMBRE = 'Hamburguesa Doble';

-- Mostrar la cantidad total comprada por Joaquin Chumacero del producto Hamburguesa Doble
SELECT SUM(VENDE.CANTIDAD) AS TOTALBENDIDO -- nombre de la columna
FROM FACTURA, VENDE, PRODUCTO
WHERE VENDE.CODIGO = PRODUCTO.CODIGO
AND VENDE.NROFACTURA = FACTURA.NROF
AND VENDE.CODIGO = PRODUCTO.CODIGO
AND PRODUCTO.NOMBRE = 'Hamburguesa Doble';

-- Mostrar todos los producots que no se han vendido
SELECT * FROM PRODUCTO
WHERE PRODUCTO.CODIGO NOT IN (SELECT VENDE.CODIGO FROM VENDE);

-- Mostrar todos los productos que si se han vendido
SELECT * FROM PRODUCTO
WHERE PRODUCTO.CODIGO IN (SELECT VENDE.CODIGO FROM VENDE);

-- Mostrar la cantidad de facturas realizadas por la venta de productos de la categoria bebidas
SELECT COUNT(*) 
FROM FACTURA, VENDE, PRODUCTO, CATEGORIA
WHERE FACTURA.NROF = VENDE.NROFACTURA
AND VENDE.CODIGO = PRODUCTO.CODIGO
AND PRODUCTO.IDCAT = CATEGORIA.ID
AND CATEGORIA.DESCRIPCION = 'BEBIDA';


/*
Actualizar desde una instancia que es una tabla de asociacion o tabla de enlace
UPDATE VENDE
SET NROFACTURA = 100,
	CODIGO = 'P003'
WHERE NROFACTURA = 101 AND CODIGO = 'P001';
*/

SELECT * FROM FACTURA;
SELECT * FROM VENDE;
SELECT * FROM PRODUCTO;
SELECT * FROM CATEGORIA;



