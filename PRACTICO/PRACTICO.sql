CREATE DATABASE HOTEL;
USE HOTEL;

-- USUARIO
CREATE TABLE PERMISO 
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50)
);

CREATE TABLE ROL 
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50)
);

CREATE TABLE USUARIO
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50) NOT NULL,
    CORREO VARCHAR(50) NOT NULL,
    CONTRASEÑA VARCHAR(255) NOT NULL,
    URL_FOTO VARCHAR(255),
    TELEFONO INTEGER NOT NULL
);

CREATE TABLE ROL_PERMISO
(
	ROL_ID INTEGER NOT NULL,
	PERMISO_ID INTEGER NOT NULL,
    PRIMARY KEY (ROL_ID, PERMISO_ID),
	FOREIGN KEY (ROL_ID)
		REFERENCES ROL(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (PERMISO_ID)
		REFERENCES PERMISO(ID)
		ON UPDATE CASCADE
        ON DELETE CASCADE
);
        
CREATE TABLE USUARIO_ROL
(
	USUARIO_ID INTEGER NOT NULL,
    ROL_ID INTEGER NOT NULL,
    PRIMARY KEY (USUARIO_ID, ROL_ID),
    FOREIGN KEY (USUARIO_ID)
		REFERENCES USUARIO(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (ROL_ID)
		REFERENCES ROL(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE USUARIO_PERMISO
(
	USUARIO_ID INTEGER NOT NULL,
    PERMISO_ID INTEGER NOT NULL,
    PRIMARY KEY (USUARIO_ID, PERMISO_ID),
    FOREIGN KEY (USUARIO_ID)
		REFERENCES USUARIO(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (PERMISO_ID)
		REFERENCES PERMISO(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

-- HABITACION
CREATE TABLE TIPO_HABITACION
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50),
    DESCRIPCION VARCHAR(100)
);

CREATE TABLE PISO
(
	CODIGO INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50)
);

CREATE TABLE ARTICULO_BAÑO
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50)
);

CREATE TABLE CARACTERISTICA
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50)
);

CREATE TABLE ARTICULO_HABITACION
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50)
);

CREATE TABLE ESTADO_HABITACION
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50),
    DESCRIPCION VARCHAR(100)
);

CREATE TABLE HABITACION
(
	PISO_CODIGO INTEGER NOT NULL,
	NRO INTEGER NOT NULL,
    PRIMARY KEY(PISO_CODIGO, NRO),
    NOMBRE VARCHAR(50),
    DESCRIPCION VARCHAR(100),
    CAPACIDAD INTEGER NOT NULL,
    PRECIO FLOAT NOT NULL,
    URL_FOTO VARCHAR(255),
    TIPO_HABITACION_ID INTEGER NOT NULL,
    ESTADO_HABITACION_ID INTEGER NOT NULL,
    FOREIGN KEY (TIPO_HABITACION_ID)
		REFERENCES TIPO_HABITACION(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (ESTADO_HABITACION_ID)
		REFERENCES ESTADO_HABITACION(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE BAÑO
(
	NRO INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50),
    PISO_CODIGO INTEGER NOT NULL,
    HABITACION_NRO INTEGER NOT NULL,
    FOREIGN KEY (PISO_CODIGO, HABITACION_NRO)
        REFERENCES HABITACION(PISO_CODIGO, NRO)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE BAÑO_ARTICULO
(
	BAÑO_NRO INTEGER NOT NULL,
    ARTICULO_BAÑO_ID INTEGER NOT NULL,
    PRIMARY KEY(BAÑO_NRO, ARTICULO_BAÑO_ID),
    FOREIGN KEY (BAÑO_NRO)
		REFERENCES BAÑO(NRO)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (ARTICULO_BAÑO_ID)
		REFERENCES ARTICULO_BAÑO(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE HABITACION_CARACTERISTICA
(
	PISO_CODIGO INTEGER NOT NULL,
    HABITACION_NRO INTEGER NOT NULL,
	CARACTERISTICA_ID INTEGER NOT NULL,
    PRIMARY KEY(PISO_CODIGO, HABITACION_NRO, CARACTERISTICA_ID),
	FOREIGN KEY (PISO_CODIGO, HABITACION_NRO)
		REFERENCES HABITACION(PISO_CODIGO,NRO)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (CARACTERISTICA_ID)
		REFERENCES CARACTERISTICA(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE HABITACION_ARTICULO
(	
	PISO_CODIGO INTEGER NOT NULL,
    HABITACION_NRO INTEGER NOT NULL,
	ARTICULO_HABITACION_ID INTEGER NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    PRIMARY KEY(PISO_CODIGO, HABITACION_NRO, ARTICULO_HABITACION_ID),
	FOREIGN KEY (PISO_CODIGO, HABITACION_NRO)
		REFERENCES HABITACION(PISO_CODIGO, NRO)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (ARTICULO_HABITACION_ID)
		REFERENCES ARTICULO_HABITACION(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

-- RESERVA
CREATE TABLE ESTADO_RESERVA
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50),
    DESCRIPCION VARCHAR(100)
);

CREATE TABLE ESTADO_PAGO
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50),
    DESCRIPCION VARCHAR(100)
);

CREATE TABLE TIPO_PAGO
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50)
);

CREATE TABLE SERVICIO
(
	ID INTEGER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50),
    PRECIO FLOAT NOT NULL
);

CREATE TABLE RESERVA
(
	ID INTEGER NOT NULL PRIMARY KEY,
    FECHA_INICIO DATE NOT NULL,
    FECHA_SALIDA DATE NOT NULL,
    MONTO_TOTAL FLOAT NOT NULL,
    CLIENTE_ID INTEGER NOT NULL,
    PISO_CODIGO INTEGER NOT NULL,
    HABITACION_NRO INTEGER NOT NULL,
	ESTADO_RESERVA_ID INTEGER NOT NULL,
    ESTADO_PAGO_ID INTEGER NOT NULL,
	FOREIGN KEY (CLIENTE_ID)
		REFERENCES USUARIO(ID)
        ON UPDATE CASCADE 
        ON DELETE CASCADE,
	FOREIGN KEY (PISO_CODIGO, HABITACION_NRO)
		REFERENCES HABITACION(PISO_CODIGO, NRO)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (ESTADO_RESERVA_ID)
		REFERENCES ESTADO_RESERVA(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (ESTADO_PAGO_ID)
		REFERENCES ESTADO_PAGO(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE PAGO_RESERVA
(
	ID INTEGER NOT NULL PRIMARY KEY,
    MONTO FLOAT NOT NULL,
    FECHA_PAGO DATE NOT NULL,
    RESERVA_ID INTEGER NOT NULL,
    TIPO_PAGO_ID INTEGER NOT NULL,
    FOREIGN KEY (RESERVA_ID) 
		REFERENCES RESERVA(ID)
		ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (TIPO_PAGO_ID)
		REFERENCES TIPO_PAGO(ID)
        ON UPDATE CASCADE 
        ON DELETE CASCADE
);

CREATE TABLE DETALLE_SERVICIO
(
	RESERVA_ID INTEGER NOT NULL,
	ID INTEGER NOT NULL,
    PRIMARY KEY(RESERVA_ID, ID),
    CANTIDAD INTEGER NOT NULL,
    MONTO_TOTAL FLOAT NOT NULL,
	ESTADO_PAGO_ID INTEGER NOT NULL,
    SERVICIO_ID INTEGER NOT NULL,
    FOREIGN KEY (ESTADO_PAGO_ID)
		REFERENCES ESTADO_PAGO(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (SERVICIO_ID)
		REFERENCES SERVICIO(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE PAGO_SERVICIO
(
	ID INTEGER NOT NULL PRIMARY KEY,
    MONTO FLOAT NOT NULL,
	FECHA_PAGO DATE NOT NULL,
    RESERVA_ID INTEGER NOT NULL,
    DETALLE_SERVICIO_ID INTEGER NOT NULL,
    TIPO_PAGO_ID INTEGER NOT NULL,
    FOREIGN KEY (RESERVA_ID, DETALLE_SERVICIO_ID)
		REFERENCES DETALLE_SERVICIO(RESERVA_ID, ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
	FOREIGN KEY (TIPO_PAGO_ID)
		REFERENCES TIPO_PAGO(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

-- POBLAR 
INSERT INTO PERMISO (ID, NOMBRE) VALUES
(1, 'Ver Reservas'),
(2, 'Crear Reservas'),
(3, 'Cancelar Reservas'),
(4, 'Gestionar Usuarios'),
(5, 'Gestionar Habitaciones');

INSERT INTO ROL (ID, NOMBRE) VALUES
(1, 'Administrador'),
(2, 'Recepcionista'),
(3, 'Cliente');

INSERT INTO USUARIO (ID, NOMBRE, CORREO, CONTRASEÑA, URL_FOTO, TELEFONO) VALUES
(1, 'Juan Pérez', 'juan.perez@gmail.com', 'contraseña123', 'https://randomuser.me/api/portraits/men/78.jpg', 76351664),
(2, 'Ana Torres', 'ana.torres@gmail.com', 'contraseña123', 'https://randomuser.me/api/portraits/women/12.jpg', 75325567),
(3, 'Carlos Ruiz', 'carlos.ruiz@gmail.com', 'contraseña123', NULL, 65904630),
(4, 'Lucía Gómez', 'lucia.gomez@gmail.com', 'contraseña123', NULL, 65003266),
(5, 'Elena Vargas', 'elena.vargas@gmail.com', 'contraseña123', 'https://randomuser.me/api/portraits/women/68.jpg', 76084809),
(6, 'Pedro Salazar', 'pedro.salazar@gmail.com', 'contraseña123', NULL, 79009657),
(7, 'Marta León', 'marta.leon@gmail.com', 'contraseña123', NULL, 63431429);

-- Administrador tiene todo los permisos 
INSERT INTO ROL_PERMISO (ROL_ID, PERMISO_ID) VALUES
(1, 1),
(1, 2),
(1, 3),
(1, 4),
(1, 5);

-- Recepcionista tiene permisos limitados
INSERT INTO ROL_PERMISO (ROL_ID, PERMISO_ID) VALUES
(2, 1),
(2, 2),
(2, 3);

-- Cliente puede solo ver y cancelar sus reservas
INSERT INTO ROL_PERMISO (ROL_ID, PERMISO_ID) VALUES
(3, 1),
(3, 3);

-- Juan es administrador
INSERT INTO USUARIO_ROL (USUARIO_ID, ROL_ID) VALUES
(1, 1);

-- Ana es recepcionista
INSERT INTO USUARIO_ROL (USUARIO_ID, ROL_ID) VALUES
(2, 2);

-- Carlos y Lucía son clientes
INSERT INTO USUARIO_ROL (USUARIO_ID, ROL_ID) VALUES
(3, 3),
(4, 3);

-- Lucía tiene permiso extra para crear reservas
INSERT INTO USUARIO_PERMISO (USUARIO_ID, PERMISO_ID) VALUES
(4, 2);

-- Elena es recepcionista
INSERT INTO USUARIO_ROL (USUARIO_ID, ROL_ID) VALUES
(5, 2);

-- Pedro es cliente
INSERT INTO USUARIO_ROL (USUARIO_ID, ROL_ID) VALUES
(6, 3);

-- Marta es administradora
INSERT INTO USUARIO_ROL (USUARIO_ID, ROL_ID) VALUES
(7, 1);

-- Pedro tiene permiso extra para crear reservas
INSERT INTO USUARIO_PERMISO (USUARIO_ID, PERMISO_ID) VALUES
(6, 2);

-- Elena tiene permiso extra para gestionar habitaciones
INSERT INTO USUARIO_PERMISO (USUARIO_ID, PERMISO_ID) VALUES
(5, 5);

INSERT INTO TIPO_HABITACION (ID, NOMBRE, DESCRIPCION) VALUES
(1, 'Individual', 'Una cama individual, ideal para una persona'),
(2, 'Doble', 'Una cama doble o dos individuales'),
(3, 'Suite', 'Habitación de lujo con comodidades adicionales');

INSERT INTO PISO (CODIGO, NOMBRE) VALUES
(1, 'Primer Piso'),
(2, 'Segundo Piso'),
(3, 'Tercer Piso');

INSERT INTO ARTICULO_BAÑO (ID, NOMBRE) VALUES
(1, 'Shampoo'),
(2, 'Jabón'),
(3, 'Papel Higiénico'),
(4, 'Toalla'),
(5, 'Cepillo de dientes');

INSERT INTO CARACTERISTICA (ID, NOMBRE) VALUES
(1, 'Vista al mar'),
(2, 'Televisión LED'),
(3, 'Aire acondicionado'),
(4, 'Caja fuerte'),
(5, 'Mini-bar');

INSERT INTO ARTICULO_HABITACION (ID, NOMBRE) VALUES
(1, 'Cama Individual'),
(2, 'Cama Doble'),
(3, 'Sofá'),
(4, 'TV pantalla plana'),
(5, 'Aire acondicionado'),
(6, 'Almohada extra'),
(7, 'Manta eléctrica'),
(8, 'Perchas'),
(9, 'Secador de pelo'),
(10, 'Escritorio');

INSERT INTO ESTADO_HABITACION (ID, NOMBRE, DESCRIPCION) VALUES
(1, 'Disponible', 'Lista para uso'),
(2, 'Ocupada', 'Actualmente en uso'),
(3, 'Limpieza', 'En proceso de limpieza'),
(4, 'Mantenimiento', 'Fuera de servicio temporalmente');

INSERT INTO HABITACION (PISO_CODIGO, NRO, NOMBRE, DESCRIPCION, CAPACIDAD, PRECIO, URL_FOTO, TIPO_HABITACION_ID, ESTADO_HABITACION_ID) VALUES
(1, 101, 'Habitación 101', 'Habitación individual con vista interna', 1, 50.00, 'https://example.com/hab101.jpg', 1, 1),
(1, 102, 'Habitación 102', 'Doble con vista al jardín', 2, 80.00, 'https://example.com/hab102.jpg', 2, 1),
(2, 201, 'Suite 201', 'Suite con vista al mar y baño privado', 3, 150.00, 'https://example.com/suite201.jpg', 3, 2);

INSERT INTO BAÑO (NRO, NOMBRE, PISO_CODIGO, HABITACION_NRO) VALUES
(1, 'Baño Principal', 1, 101),
(2, 'Baño Auxiliar', 1, 102),
(3, 'Baño Principal', 2, 201);

-- Baño 101
INSERT INTO BAÑO_ARTICULO (BAÑO_NRO, ARTICULO_BAÑO_ID) VALUES
(1, 1),
(1, 2),
(1, 3),
(1, 4);

-- Baño 102
INSERT INTO BAÑO_ARTICULO (BAÑO_NRO, ARTICULO_BAÑO_ID) VALUES
(2, 2),
(2, 3);

-- Baño 201
INSERT INTO BAÑO_ARTICULO (BAÑO_NRO, ARTICULO_BAÑO_ID) VALUES
(3, 1),
(3, 3),
(3, 5);

-- Habitación 101
INSERT INTO HABITACION_CARACTERISTICA (PISO_CODIGO, HABITACION_NRO, CARACTERISTICA_ID) VALUES
(1, 101, 2),
(1, 101, 3);

-- Habitación 102
INSERT INTO HABITACION_CARACTERISTICA (PISO_CODIGO, HABITACION_NRO, CARACTERISTICA_ID) VALUES
(1, 102, 1),
(1, 102, 2),
(1, 102, 3);

-- Suite 201
INSERT INTO HABITACION_CARACTERISTICA (PISO_CODIGO, HABITACION_NRO, CARACTERISTICA_ID) VALUES
(2, 201, 1),
(2, 201, 2),
(2, 201, 3),
(2, 201, 4),
(2, 201, 5);

-- Habitación 101
INSERT INTO HABITACION_ARTICULO (PISO_CODIGO, HABITACION_NRO, ARTICULO_HABITACION_ID, CANTIDAD) VALUES
(1, 101, 1, 1),
(1, 101, 2, 1);

-- Habitación 102
INSERT INTO HABITACION_ARTICULO (PISO_CODIGO, HABITACION_NRO, ARTICULO_HABITACION_ID, CANTIDAD) VALUES
(1, 102, 2, 2),
(1, 102, 3, 1);

-- Suite 201
INSERT INTO HABITACION_ARTICULO (PISO_CODIGO, HABITACION_NRO, ARTICULO_HABITACION_ID, CANTIDAD) VALUES
(2, 201, 1, 2),
(2, 201, 4, 1),
(2, 201, 5, 1);

INSERT INTO ESTADO_RESERVA (ID, NOMBRE, DESCRIPCION) VALUES
(1, 'Pendiente', 'La reserva ha sido registrada pero aún no confirmada'),
(2, 'Confirmada', 'La reserva fue confirmada'),
(3, 'Cancelada', 'La reserva fue cancelada'),
(4, 'Finalizada', 'La estadía ha finalizado');

INSERT INTO ESTADO_PAGO (ID, NOMBRE, DESCRIPCION) VALUES
(1, 'Pendiente', 'Pago aún no realizado'),
(2, 'Pagado', 'Pago realizado completamente'),
(3, 'Parcial', 'Pago realizado parcialmente');

INSERT INTO TIPO_PAGO (ID, NOMBRE) VALUES
(1, 'Efectivo'),
(2, 'Tarjeta de Crédito'),
(3, 'Transferencia Bancaria'),
(4, 'PayPal');

INSERT INTO SERVICIO (ID, NOMBRE, PRECIO) VALUES
(1, 'Desayuno Buffet', 15.00),
(2, 'Spa', 30.00),
(3, 'Servicio a la habitación', 10.00),
(4, 'Lavandería', 8.00);

-- Reserva para Carlos Ruiz (usuario 3) en habitación 101
INSERT INTO RESERVA (ID, FECHA_INICIO, FECHA_SALIDA, MONTO_TOTAL, CLIENTE_ID, PISO_CODIGO, HABITACION_NRO, ESTADO_RESERVA_ID, ESTADO_PAGO_ID) VALUES
(1, '2025-06-20', '2025-06-23', 150.00, 3, 1, 101, 2, 2);

-- Reserva para Lucía Gómez (usuario 4) en suite 201
INSERT INTO RESERVA (ID, FECHA_INICIO, FECHA_SALIDA, MONTO_TOTAL, CLIENTE_ID, PISO_CODIGO, HABITACION_NRO, ESTADO_RESERVA_ID, ESTADO_PAGO_ID) VALUES
(2, '2025-07-01', '2025-07-05', 600.00, 4, 2, 201, 1, 1);

-- Pago completo de Carlos Ruiz con tarjeta
INSERT INTO PAGO_RESERVA (ID, MONTO, FECHA_PAGO, RESERVA_ID, TIPO_PAGO_ID) VALUES
(1, 150.00, '2025-06-15', 1, 2);

-- Pago parcial de Lucía Gómez con transferencia
INSERT INTO PAGO_RESERVA (ID, MONTO, FECHA_PAGO, RESERVA_ID, TIPO_PAGO_ID) VALUES
(2, 300.00, '2025-06-28', 2, 3);

-- Carlos Ruiz pidió 2 desayunos
INSERT INTO DETALLE_SERVICIO (RESERVA_ID, ID, CANTIDAD, MONTO_TOTAL, ESTADO_PAGO_ID, SERVICIO_ID) VALUES
(1, 1, 2, 30.00, 2, 1);

-- Lucía Gómez pidió 1 spa y 1 lavandería, aún no pagados
INSERT INTO DETALLE_SERVICIO (RESERVA_ID, ID, CANTIDAD, MONTO_TOTAL, ESTADO_PAGO_ID, SERVICIO_ID) VALUES
(2, 1, 1, 30.00, 1, 2),
(2, 2, 1, 8.00, 1, 4);

-- Carlos pagó sus desayunos en efectivo
INSERT INTO PAGO_SERVICIO (ID, MONTO, FECHA_PAGO, RESERVA_ID, DETALLE_SERVICIO_ID, TIPO_PAGO_ID) VALUES
(1, 30.00, '2025-06-16', 1, 1, 1);
